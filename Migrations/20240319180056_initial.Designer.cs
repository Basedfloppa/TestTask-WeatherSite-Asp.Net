// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using db_context;

#nullable disable

namespace TestTask_DS.Migrations
{
    [DbContext(typeof(WeatherContext))]
    [Migration("20240319180056_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("db_context.Weather", b =>
                {
                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<DateTimeOffset>("Time")
                        .HasColumnType("time with time zone")
                        .HasColumnName("time");

                    b.Property<string>("AirDirection")
                        .HasColumnType("text")
                        .HasColumnName("air_direction");

                    b.Property<byte>("AirMoisture")
                        .HasColumnType("smallint")
                        .HasColumnName("air_moisture");

                    b.Property<byte>("AirSpeed")
                        .HasColumnType("smallint")
                        .HasColumnName("air_speed");

                    b.Property<byte?>("Cloudiness")
                        .HasColumnType("smallint")
                        .HasColumnName("cloudiness");

                    b.Property<short>("DewPoint")
                        .HasColumnType("smallint")
                        .HasColumnName("dew_point");

                    b.Property<byte>("HorisontalVisibility")
                        .HasColumnType("smallint")
                        .HasColumnName("horisontal_visibility");

                    b.Property<int>("LowerCloudinessTreshold")
                        .HasColumnType("integer")
                        .HasColumnName("lower_cloudiness_treshold");

                    b.Property<int>("Pressure")
                        .HasColumnType("integer")
                        .HasColumnName("pressure");

                    b.Property<short>("Temperature")
                        .HasColumnType("smallint")
                        .HasColumnName("temperature");

                    b.Property<string>("WeatherConditions")
                        .HasColumnType("text")
                        .HasColumnName("weather_condition");

                    b.HasKey("Date", "Time")
                        .HasName("Weather_Pk");

                    b.ToTable("weather", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
